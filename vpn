#!/bin/env bash

INSTALL_DIR="${VPN_INSTALL_DIR:-$HOME/.vpn}"
OPERATION="$1"

messages() {
  case "$1" in
  "info")
    gum log -t "kitchen" --level info "$2"
    ;;
  "warn")
    gum log -t "kitchen" --level warn "$2"
    ;;
  "error")
    gum log -t "kitchen" --level error "$2"
    ;;
  esac
}

check_dependencies() {
  if ! which gum &>/dev/null; then
    curl -fsSL https://repo.charm.sh/apt/gpg.key |
      sudo gpg --dearmor -o /etc/apt/keyrings/charm.gpg >/dev/null
    echo "deb [signed-by=/etc/apt/keyrings/charm.gpg] https://repo.charm.sh/apt/ * *" |
      sudo tee /etc/apt/sources.list.d/charm.list >/dev/null
    sudo apt update >/dev/null && sudo apt install gum -y >/dev/null
  fi

  if ! which f5fpc &>/dev/null; then
    messages "error" "F5 Linux CLI is not installed"
    gum spin --spinner dot --title "Installing..." -- \
      curl https://iconnect.global.volvocars.biz/public/share/linux_f5cli.x86_64.deb \
      --output /tmp/linux_f5cli.x86_64.deb &&
      sudo dpkg -i /tmp/linux_f5cli.x86_64.deb >/dev/null &&
      messages "info" "F5 Linux CLI successfully installed"
  fi

  if ! which java &>/dev/null; then
    messages "error" "Java Runtime Environment is not installed"
    gum spin --spinner dot --title "Installing..." -- \
      sudo apt update &&
      sudo apt install openjdk-11-jre -y >/dev/null &&
      messages "info" "Java Runtime Environment successfully installed"
  fi

  if [[ ! -f "$HOME/.pointsharp/pointsharp_v2.jar" ]]; then
    messages "error" "Pointsharp CLI is not installed"
    mkdir "$HOME/.pointsharp/"
    gum spin --spinner dot --title "Installing..." -- \
      curl https://confluence.volvocars.biz/download/attachments/259652341/pointsharp_v2.jar \
      --output "$HOME/.pointsharp/pointsharp_v2.jar" >/dev/null &&
      messages "info" "Pointsharp CLI successfully installed"
  fi
}

check_dependencies

menu() {
  OPERATION=$(gum choose --header "Select an operation" "connect" "disconnect" "status" "credentials" "reconfigure" "install" "uninstall" "exit")
  main
}

check_installation() {
  if [[ ! -f "$INSTALL_DIR/vpn" ]]; then
    gum confirm "VPN utility is not installed in your system. Would you like to install it?" && install
  fi
}

set_credentials() {
  if [[ ! -d "$INSTALL_DIR" ]]; then
    mkdir "$INSTALL_DIR"
  fi

  if [[ ! -f "$INSTALL_DIR/pwd" ]]; then
    touch "$INSTALL_DIR/pwd"
  else
    sudo chmod 644 "$INSTALL_DIR/pwd"
    sudo chown "$USER":"$USER" "$INSTALL_DIR/pwd"
  fi

  gum input --password --placeholder "Enter your CDSID password" >"$INSTALL_DIR/pwd"
  gum input --password --placeholder "Enter your PointSharp 4 digits PIN" >>"$INSTALL_DIR/pwd"
  gum input --password --placeholder "Enter your PointSharp 6 digits OTP" >>"$INSTALL_DIR/pwd"
  chmod 400 "$INSTALL_DIR/pwd"
  sudo chown root:root "$INSTALL_DIR/pwd"
}

install() {
  if [[ -f "$INSTALL_DIR/vpn" ]]; then
    messages "warn" "VPN utility is already installed in your system"
    menu
  fi

  set_credentials

  cp "$0" "$INSTALL_DIR/vpn"
  chmod +x "$INSTALL_DIR/vpn"
  sudo ln -f "$INSTALL_DIR/vpn" "/usr/local/bin/vpn"

  if which vpn >/dev/null; then
    messages "info" "VPN utility successfully installed in '$(which vpn)'"
    menu
  else
    messages "error" "Installation failed"
  fi
}

uninstall() {
  if [[ -f "/usr/local/bin/vpn" ]]; then
    sudo rm "/usr/local/bin/vpn"
    messages "info" "VPN utility successfully uninstalled"
  fi
}

check_installation

main() {
  while true; do
    case "${OPERATION}" in
    "connect")
      WIFI_NAME="VolvoCars"

      if iwgetid | grep "${WIFI_NAME}" >/dev/null; then
        messages "warn" "Already connected to '${WIFI_NAME}' network"
        gum confirm "Connect anyway?" || exit 0
      fi

      f5fpc --info >/dev/null
      if [[ "$?" == "5" ]]; then
        messages "info" "$(f5fpc --stop)"
      fi

      SERVER_ADDR="https://iconnect.global.volvocars.biz"
      PASSWORD="$(sudo sed -n '1p' $INSTALL_DIR/pwd /dev/null 2>&1 || gum input --password --placeholder 'Enter your CDSID password')"
      PIN="$(sudo sed -n '2p' $INSTALL_DIR/pwd /dev/null 2>&1 || gum input --password --placeholder 'Enter your PointSharp 4 digits PIN')"
      OTP="$(sudo sed -n '3p' $INSTALL_DIR/pwd /dev/null 2>&1 || gum input --password --placeholder 'Enter your PointSharp 6 digits OTP')"
      POINTSHARP_TOKEN="$(java -jar $HOME/.pointsharp/pointsharp_v2.jar ${OTP})"
      UNAME=""

      if [[ "$(gum choose --timeout=5s --selected 'yes' --header "Is '$USER' your correct CDSID?" 'yes' 'no')" == 'yes' ]]; then
        UNAME="$USER"
      else
        UNAME="$(gum input --placeholder 'Enter your CDSID')"
      fi

      if [[ -z "$SERVER_ADDR" ]] || [[ -z "$PASSWORD" ]] || [[ -z "$PIN" ]] || [[ -z "$OTP" ]] || [[ -z "$POINTSHARP_TOKEN" ]] || [[ -z "$UNAME" ]]; then
        messages "warn" "A required input is missing. Please enter again"
        main
      fi

      f5fpc --start -u "${UNAME}" -p "${PIN}${POINTSHARP_TOKEN}${PASSWORD}" -t "${SERVER_ADDR}" >/dev/null
      gum spin --spinner points --title "Connecting" -- sleep 20

      f5fpc --info >/dev/null
      if [[ $? == "5" ]]; then
        notify-send -a "VPN" -i "network-receive" -c "Network" "VPN connected" "You are now connected to Volvo Cars' network"
        messages "info" "Session established"
      else
        messages "error" "Connection error"
      fi

      exit
      ;;

    "disconnect")
      gum spin --spinner points --title "Disconnecting" -- f5fpc --stop
      messages "info" "Disconnected successfully"
      notify-send -a "VPN" -i "network-offline" -c "Network" "VPN disconnected" "You are now not connected to Volvo Cars' network"
      exit
      ;;

    "status")
      messages "info" "$(f5fpc --info | head -1)"
      exit
      ;;

    "install")
      install
      exit
      ;;

    "uninstall")
      uninstall
      exit
      ;;

    "credentials")
      gum pager "$(sudo cat ${INSTALL_DIR}/pwd)"
      exit
      ;;

    "reconfigure")
      set_credentials
      exit
      ;;

    "exit")
      exit 0
      ;;

    *)
      if [[ -z "${OPERATION}" ]]; then
        menu
      else
        messages "error" "Unrecognized option '${OPERATION}'"
        menu
      fi
      ;;
    esac
  done
}

main
